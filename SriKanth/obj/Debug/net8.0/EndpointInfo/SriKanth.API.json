{
  "openapi": "3.0.4",
  "info": {
    "title": "SriKanth.API",
    "version": "1.0"
  },
  "paths": {
    "/api/Business/GetStockDetails": {
      "get": {
        "tags": [
          "Business"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/item-image": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "itemNo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetListOfOrderCreationDetails": {
      "get": {
        "tags": [
          "Business"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetOrderCreationDetailsByUser": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetLocationDetailsByUser": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetCustomersDetailsByUser": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetItemsDetailsByUser": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/CreateOrder": {
      "post": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetPendingOrders": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetProcessingOrders": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetDeliveredOrders": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetRejectedOrders": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/ChangeStatus": {
      "post": {
        "tags": [
          "Business"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetInvoiceDetails": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetInvoicesByCustomer": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetOrdersCount": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/UploadUserDocument": {
      "post": {
        "tags": [
          "Business"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "UserId"
                ],
                "type": "object",
                "properties": {
                  "UserId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "Document": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "UserId": {
                  "style": "form"
                },
                "Document": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/GetListOfDocuments": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/download": {
      "get": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "documentUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/DeleteDocument": {
      "delete": {
        "tags": [
          "Business"
        ],
        "parameters": [
          {
            "name": "documentUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/check-environment": {
      "get": {
        "tags": [
          "Business"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Business/test-direct-sql": {
      "get": {
        "tags": [
          "Business"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/refresh-token": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/validate-mfa": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAValidationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MFAValidationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MFAValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/new-password": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordReset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/AddUser": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/UpdateUser": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/GetUserCreationDetails": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/GetUserDetailsById": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/GetAllUsers": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/encrypt": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptTextRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptTextRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptTextRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EncryptTextRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MFAValidationRequest": {
        "required": [
          "mfaCode",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "mfaCode": {
            "maxLength": 6,
            "minLength": 6,
            "pattern": "^[0-9]{6}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OrderItemRequest": {
        "required": [
          "description",
          "itemCode",
          "quantity",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "itemCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "quantity": {
            "minimum": 0.0001,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "discountPercent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "OrderRequest": {
        "required": [
          "customerCode",
          "items",
          "locationCode",
          "paymentMethodCode",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "customerCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "locationCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "paymentMethodCode": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "specialNote": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemRequest"
            }
          }
        },
        "additionalProperties": false
      },
      "OrderStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "PasswordReset": {
        "required": [
          "confirmPassword",
          "newPassword",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "newPassword": {
            "maxLength": 50,
            "minLength": 6,
            "type": "string"
          },
          "confirmPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestLogin": {
        "required": [
          "password",
          "usernameOrEmail"
        ],
        "type": "object",
        "properties": {
          "usernameOrEmail": {
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^(?:(?:[a-zA-Z0-9_\\.-]+)|(?:[a-zA-Z0-9_\\.-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-\\.]+))$",
            "type": "string"
          },
          "password": {
            "maxLength": 50,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z]).{8,}$",
            "type": "string",
            "format": "password"
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateOrderRequest": {
        "required": [
          "ordernumber",
          "status"
        ],
        "type": "object",
        "properties": {
          "ordernumber": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "rejectReason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "delivertPersonName": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDetails": {
        "required": [
          "firstName",
          "isActive",
          "isMfaEnabled",
          "lastName",
          "locationCodes",
          "password",
          "reEnteredPassword",
          "username",
          "userRoleId"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 4,
            "pattern": "^[a-zA-Z0-9_\\-\\.]+$",
            "type": "string"
          },
          "password": {
            "maxLength": 100,
            "minLength": 8,
            "pattern": "^(?=.*[a-z])(?=.*[A-Z]).{8,}$",
            "type": "string",
            "format": "password"
          },
          "reEnteredPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s\\-']+$",
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s\\-']+$",
            "type": "string"
          },
          "userRoleId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "salesPersonCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "locationCodes": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "format": "tel",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isMfaEnabled": {
            "type": "boolean"
          },
          "mfaType": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}